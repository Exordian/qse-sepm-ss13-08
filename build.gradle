apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = "at.ac.tuwien.sepm.Main"

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenCentral()
}

dependencies {

    /* Spring */
    compile 'org.springframework:spring-context:3.2.2.RELEASE'
    compile 'org.springframework:spring-tx:3.2.2.RELEASE'
    compile 'org.springframework:spring-jdbc:3.2.2.RELEASE'

    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'org.hsqldb:hsqldb:2.2.9'
    compile 'log4j:log4j:1.2.16'


    /* Lva Fetcher */
    compile 'org.jsoup:jsoup:1.7.2'

    /* PDF Parser */
    compile 'org.apache.pdfbox:pdfbox:1.8.2'

    /* iCalendar */
    compile 'org.mnode.ical4j:ical4j:1.0.4'
    compile 'javax.activation:activation:1.1'

    /* Calendar */
    compile 'joda-time:joda-time:2.2'
    compile 'com.toedter:jcalendar:1.3.2'

    /* UI */
    compile 'com.miglayout:miglayout:3.7.4'

    /* Testing */
    testCompile 'junit:junit:4.11'
    testCompile "org.mockito:mockito-all:1.9.5"
    testCompile 'org.springframework:spring-test:3.2.2.RELEASE'

}

// Gradle Workaround
jacocoTestReport {
    dependsOn(test)
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

//jar {
//  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//  manifest { attributes 'Main-Class': mainClassName }
//}

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}


task dbmanager(type: JavaExec) {
    classpath = configurations.compile 
    main = "org.hsqldb.util.DatabaseManagerSwing"
}

task dbserver(type: JavaExec) {
    classpath = configurations.compile
    main = "org.hsqldb.Server"
    args = ['-database.0', 'file:./.db', '-dbname.0', 'xdb']
}
